; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "QPULSECAPTURE"
#define MyAppVersion "5.0.0.0"
#define MyAppPublisher "MeZoN"
#define MyAppExeName "QPULSECAPTURE.exe"
#define MyAppURL "https://repo.nefrosovet.ru/a.a.taranov/QVideomeas"

;Define if you want to build setup for x64 version
;#define AMD64 

#define Opencv "C:\Programming\3rdParties\opencv330"
#ifndef AMD64  
  #define Qt "C:\Qt\5.9.1\mingw53_32\bin"
  #define ARCH "x86"
#else
  #define Qt "C:\Qt\5.9.1\mingw53_64\bin"
  #define ARCH "x64"
#endif

[Setup]
; Do not change GUID in future version because GUID is used to determine if app is installed in system or not
AppId={{1D23C901-BE81-42F2-95DD-49DBB1779B58}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppPublisher}\{#MyAppName}
OutputDir=C:\Programming\Releases
OutputBaseFilename=SETUP_{#MyAppName}_v{#MyAppVersion}_{#ARCH}_gcc
Compression=lzma
SolidCompression=yes
#ifdef AMD64
; "ArchitecturesAllowed=x64" specifies that Setup cannot run on
; anything but x64.
ArchitecturesAllowed=x64
; "ArchitecturesInstallIn64BitMode=x64" requests that the install be
; done in "64-bit mode" on x64, meaning it should use the native
; 64-bit Program Files directory and the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64
#endif

[Languages]
Name: "English"; MessagesFile: "compiler:Default.isl"
Name: "Russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
#ifndef AMD64
  Source: "C:\Programming\QVideomeas\build\build-{#MyAppName}-Desktop_Qt_5_9_1_MinGW_32bit-Release\release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
#else
  ;not used
#endif
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_core330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_highgui330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_imgproc330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_objdetect330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_video330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_videoio330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_imgcodecs330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\build\{#ARCH}\mingw\bin\libopencv_ml330.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Opencv}\sources\data\haarcascades\haarcascade_frontalface_alt2.xml"; DestDir: "{app}\haarcascades"; Flags: ignoreversion
Source: "{#Qt}\libEGL.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\libGLESv2.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\opengl32sw.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\libstdc++-6.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\libwinpthread-1.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Qt\Tools\mingw530_32\bin\libgcc_s_dw2-1.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5Concurrent.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5Gui.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5Multimedia.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5OpenGL.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5Sensors.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5Widgets.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5SerialPort.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\Qt5Network.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#Qt}\..\plugins\platforms\qminimal.dll"; DestDir: "{app}\platforms"; Flags: ignoreversion
Source: "{#Qt}\..\plugins\platforms\qoffscreen.dll"; DestDir: "{app}\platforms"; Flags: ignoreversion
Source: "{#Qt}\..\plugins\platforms\qwindows.dll"; DestDir: "{app}\platforms"; Flags: ignoreversion
Source: "{#Qt}\..\plugins\mediaservice\dsengine.dll"; DestDir: "{app}\mediaservice"; Flags: ignoreversion
Source: "{#Qt}\..\plugins\sensors\qtsensors_generic.dll"; DestDir: "{app}\sensors"; Flags: ignoreversion
;Add vpg library
Source: "C:\Programming\vpglib\Library\bin\{#ARCH}\mingw\vpg.dll"; DestDir: "{app}"; Flags: ignoreversion
;Add translation
Source: "C:\Programming\QVideomeas\{#MyAppName}\{#MyAppName}.qm"; DestDir: "{app}"; Flags: ignoreversion; Languages: "Russian"
;Add head contour font 
Source: "C:\Programming\QVideomeas\Resources\FilledHeadContours.TTF"; DestDir: "{fonts}"; FontInstall: "FilledHeadContours"; Flags: onlyifdoesntexist uninsneveruninstall
;Add CH340G USB-UART driver
Source: "C:\Programming\3rdParties\Devices\CH341SER\*"; DestDir: "{tmp}\CH341SER"; Flags: ignoreversion recursesubdirs


[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
;Add CH340G USB-UART driver install 
Filename: "{tmp}\CH341SER\SETUP.exe"; Flags: waituntilterminated
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
//-------------------------------------------------------------------------------------
// Delete app if it had been installed before
//-------------------------------------------------------------------------------------
function GetUninstallString: string;
var
  sUnInstPath: string;
  sUnInstallString: String;
begin
  Result := '';
  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{{1D23C901-BE81-42F2-95DD-49DBB1779B58}_is1'); //Your App GUID/ID
  sUnInstallString := '';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  Result := sUnInstallString;
end;

function IsUpgrade: Boolean;
begin
  Result := (GetUninstallString() <> '');
end;

function InitializeSetup: Boolean;
var
  V: Integer;
  iResultCode: Integer;
  sUnInstallString: string;
begin
  Result := True; // in case when no previous version is found
  if RegValueExists(HKEY_LOCAL_MACHINE,'Software\Microsoft\Windows\CurrentVersion\Uninstall\{1D23C901-BE81-42F2-95DD-49DBB1779B58}_is1', 'UninstallString') then  //Your App GUID/ID
  begin
    V := MsgBox(ExpandConstant('An old version of app has been detected. Uninstall now?'), mbInformation, MB_YESNO); //Custom Message if App installed
    if V = IDYES then
    begin
      sUnInstallString := GetUninstallString();
      sUnInstallString :=  RemoveQuotes(sUnInstallString);
      Exec(ExpandConstant(sUnInstallString), '', '', SW_SHOW, ewWaitUntilTerminated, iResultCode);
      Result := True; //if you want to proceed after uninstall
      //Exit; //if you want to quit after uninstall
    end
    else
      Result := False; //when older version present and not uninstalled
  end;
end;
//-------------------------------------------------------------------------------------